const express = require('express');
const axios = require('axios');

const app = express();
const PORT = process.env.PORT || 3000; // Gunakan port dari environment atau default 3000

// Konstanta dan fungsi helper
const countryMap = {
    "AF": "Afghanistan ðŸ‡¦ðŸ‡«", "AL": "Albania ðŸ‡¦ðŸ‡±", "DZ": "Aljazair ðŸ‡©ðŸ‡¿", "AD": "Andorra ðŸ‡¦ðŸ‡©", "AO": "Angola ðŸ‡¦ðŸ‡´",
    "AR": "Argentina ðŸ‡¦ðŸ‡·", "AM": "Armenia ðŸ‡¦ðŸ‡²", "AU": "Australia ðŸ‡¦ðŸ‡º", "AT": "Austria ðŸ‡¦ðŸ‡¹", "AZ": "Azerbaijan ðŸ‡¦ðŸ‡¿",
    "BH": "Bahrain ðŸ‡§ðŸ‡­", "BD": "Bangladesh ðŸ‡§ðŸ‡©", "BY": "Belarus ðŸ‡§ðŸ‡¾", "BE": "Belgia ðŸ‡§ðŸ‡ª", "BZ": "Belize ðŸ‡§ðŸ‡¿",
    "BJ": "Benin ðŸ‡§ðŸ‡¯", "BT": "Bhutan ðŸ‡§ðŸ‡¹", "BO": "Bolivia ðŸ‡§ðŸ‡´", "BA": "Bosnia & Herzegovina ðŸ‡§ðŸ‡¦", "BW": "Botswana ðŸ‡§ðŸ‡¼",
    "BR": "Brasil ðŸ‡§ðŸ‡·", "BN": "Brunei ðŸ‡§ðŸ‡³", "BG": "Bulgaria ðŸ‡§ðŸ‡¬", "BF": "Burkina Faso ðŸ‡§ðŸ‡«", "BI": "Burundi ðŸ‡§ðŸ‡®",
    "KH": "Kamboja ðŸ‡°ðŸ‡­", "CM": "Kamerun ðŸ‡¨ðŸ‡²", "CA": "Kanada ðŸ‡¨ðŸ‡¦", "CF": "Republik Afrika Tengah ðŸ‡¨ðŸ‡«", "TD": "Chad ðŸ‡¹ðŸ‡©",
    "CL": "Chili ðŸ‡¨ðŸ‡±", "CN": "Tiongkok ðŸ‡¨ðŸ‡³", "CO": "Kolombia ðŸ‡¨ðŸ‡´", "KM": "Komoro ðŸ‡°ðŸ‡²", "CD": "Kongo ðŸ‡¨ðŸ‡©",
    "CR": "Kosta Rika ðŸ‡¨ðŸ‡·", "HR": "Kroasia ðŸ‡­ðŸ‡·", "CU": "Kuba ðŸ‡¨ðŸ‡º", "CY": "Siprus ðŸ‡¨ðŸ‡¾", "CZ": "Republik Ceko ðŸ‡¨ðŸ‡¿",
    "DK": "Denmark ðŸ‡©ðŸ‡°", "DJ": "Djibouti ðŸ‡©ðŸ‡¯", "DO": "Republik Dominika ðŸ‡©ðŸ‡´", "EC": "Ekuador ðŸ‡ªðŸ‡¨", "EG": "Mesir ðŸ‡ªðŸ‡¬",
    "SV": "El Salvador ðŸ‡¸ðŸ‡»", "GQ": "Guinea Khatulistiwa ðŸ‡¬ðŸ‡¶", "ER": "Eritrea ðŸ‡ªðŸ‡·", "EE": "Estonia ðŸ‡ªðŸ‡ª", "ET": "Ethiopia ðŸ‡ªðŸ‡¹",
    "FI": "Finlandia ðŸ‡«ðŸ‡®", "FR": "Prancis ðŸ‡«ðŸ‡·", "GA": "Gabon ðŸ‡¬ðŸ‡¦", "GM": "Gambia ðŸ‡¬ðŸ‡²", "GE": "Georgia ðŸ‡¬ðŸ‡ª",
    "DE": "Jerman ðŸ‡©ðŸ‡ª", "GH": "Ghana ðŸ‡¬ðŸ‡­", "GR": "Yunani ðŸ‡¬ðŸ‡·", "GT": "Guatemala ðŸ‡¬ðŸ‡¹", "GN": "Guinea ðŸ‡¬ðŸ‡³",
    "IN": "India ðŸ‡®ðŸ‡³", "ID": "Indonesia ðŸ‡®ðŸ‡©", "IR": "Iran ðŸ‡®ðŸ‡·", "IQ": "Irak ðŸ‡®ðŸ‡¶", "IE": "Irlandia ðŸ‡®ðŸ‡ª",
    "IL": "Israel ðŸ‡®ðŸ‡±", "IT": "Italia ðŸ‡®ðŸ‡¹", "JP": "Jepang ðŸ‡¯ðŸ‡µ", "JO": "Yordania ðŸ‡¯ðŸ‡´", "KZ": "Kazakhstan ðŸ‡°ðŸ‡¿",
    "KE": "Kenya ðŸ‡°ðŸ‡ª", "KR": "Korea Selatan ðŸ‡°ðŸ‡·", "KW": "Kuwait ðŸ‡°ðŸ‡¼", "LA": "Laos ðŸ‡±ðŸ‡¦", "LV": "Latvia ðŸ‡±ðŸ‡»",
    "LB": "Lebanon ðŸ‡±ðŸ‡§", "LY": "Libya ðŸ‡±ðŸ‡¾", "LT": "Lituania ðŸ‡±ðŸ‡¹", "LU": "Luksemburg ðŸ‡±ðŸ‡º", "MG": "Madagaskar ðŸ‡²ðŸ‡¬",
    "MY": "Malaysia ðŸ‡²ðŸ‡¾", "MV": "Maladewa ðŸ‡²ðŸ‡»", "ML": "Mali ðŸ‡²ðŸ‡±", "MT": "Malta ðŸ‡²ðŸ‡¹", "MX": "Meksiko ðŸ‡²ðŸ‡½",
    "MA": "Maroko ðŸ‡²ðŸ‡¦", "MM": "Myanmar ðŸ‡²ðŸ‡²", "NP": "Nepal ðŸ‡³ðŸ‡µ", "NL": "Belanda ðŸ‡³ðŸ‡±", "NZ": "Selandia Baru ðŸ‡³ðŸ‡¿",
    "NG": "Nigeria ðŸ‡³ðŸ‡¬", "NO": "Norwegia ðŸ‡³ðŸ‡´", "OM": "Oman ðŸ‡´ðŸ‡²", "PK": "Pakistan ðŸ‡µðŸ‡°", "PA": "Panama ðŸ‡µðŸ‡¦",
    "PY": "Paraguay ðŸ‡µðŸ‡¾", "PE": "Peru ðŸ‡µðŸ‡ª", "PH": "Filipina ðŸ‡µðŸ‡­", "PL": "Polandia ðŸ‡µðŸ‡±", "PT": "Portugal ðŸ‡µðŸ‡¹",
    "QA": "Qatar ðŸ‡¶ðŸ‡¦", "RO": "Rumania ðŸ‡·ðŸ‡´", "RU": "Rusia ðŸ‡·ðŸ‡º", "SA": "Arab Saudi ðŸ‡¸ðŸ‡¦", "SN": "Senegal ðŸ‡¸ðŸ‡³",
    "SG": "Singapura ðŸ‡¸ðŸ‡¬", "ZA": "Afrika Selatan ðŸ‡¿ðŸ‡¦", "ES": "Spanyol ðŸ‡ªðŸ‡¸", "SE": "Swedia ðŸ‡¸ðŸ‡ª", "CH": "Swiss ðŸ‡¨ðŸ‡­",
    "TH": "Thailand ðŸ‡¹ðŸ‡­", "TR": "Turki ðŸ‡¹ðŸ‡·", "UA": "Ukraina ðŸ‡ºðŸ‡¦", "AE": "Uni Emirat Arab ðŸ‡¦ðŸ‡ª", "GB": "Inggris ðŸ‡¬ðŸ‡§",
    "US": "Amerika Serikat ðŸ‡ºðŸ‡¸", "UZ": "Uzbekistan ðŸ‡ºðŸ‡¿", "VE": "Venezuela ðŸ‡»ðŸ‡ª", "VN": "Vietnam ðŸ‡»ðŸ‡³", "YE": "Yaman ðŸ‡¾ðŸ‡ª",
    "ZW": "Zimbabwe ðŸ‡¿ðŸ‡¼"
};

async function stalkml(uid, server) {
    try {
        const response = await axios({
            method: 'post',
            url: 'https://moogold.com/wp-content/plugins/id-validation-new/id-validation-ajax.php',
            data: new URLSearchParams({
                attribute_amount: null,
                'text-5f6f144f8ffee': uid,
                'text-1601115253775': server,
                quantity: '1',
                'add-to-cart': '15145',
                product_id: '15145',
                variation_id: null
            }),
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                'Accept': '*/*',
                'X-Requested-With': 'XMLHttpRequest',
                'Cache-Control': 'no-cache',
                'Pragma': 'no-cache',
                'Host': 'moogold.com',
                'Origin': 'https://moogold.com/product/mobile-legends/',
                'Referer': 'https://moogold.com/product/mobile-legends/'
            }
        });

        const message = response.data.message;
        if (!message || typeof message !== 'string') {
            throw new Error('Format respons tidak valid dari MooGold');
        }

        const lines = message.split('\n').map(line => line.trim());
        const countryCode = lines[3]?.split(': ')[1] || null;

        return {
            userID: lines[0]?.split(': ')[1] || null,
            serverID: lines[1]?.split(': ')[1] || null,
            nickname: lines[2]?.split(': ')[1] || null,
            country: countryCode,
            negara: countryMap[countryCode] || countryCode
        };
    } catch (error) {
        // Lemparkan error agar bisa ditangkap di block catch selanjutnya
        throw new Error('Gagal mengambil data nickname: ' + error.message);
    }
}

// Endpoint API
app.get('/cekml', async (req, res) => {
    const { id, server } = req.query;

    if (!id || !server) {
        return res.status(400).json({
            status: false,
            creator: 'Firman Evergarden ^_^',
            message: 'Parameter "id" dan "server" dibutuhkan'
        });
    }

    try {
        // 1. Dapatkan data nickname dan negara dari moogold
        const cekId = await stalkml(id, server);
        if (!cekId.nickname) {
             return res.status(404).json({
                status: false,
                creator: 'Firman Evergarden ^_^',
                message: 'User ID atau Server ID tidak ditemukan.'
            });
        }

        // 2. Dapatkan data double recharge dari mobapay
        const mobaPayResponse = await axios.get(`https://api.mobapay.com/api/app_shop?app_id=100000&game_user_key=${id}&game_server_key=${server}&country=${cekId.country}&language=en&network=&net=&coupon_id=&shop_id=`);
        const mobaPayData = mobaPayResponse.data.data.shop_info.shelf_location[0].goods;

        const resultData = {
            id: id,
            server: server,
            nickname: cekId.nickname,
            country_code: cekId.country,
            country_name: cekId.negara,
            double_recharge: {
                '50+50': mobaPayData[0]?.goods_limit.reached_limit,
                '150+150': mobaPayData[1]?.goods_limit.reached_limit,
                '250+250': mobaPayData[2]?.goods_limit.reached_limit,
                '500+500': mobaPayData[3]?.goods_limit.reached_limit
            }
        };

        // 3. Kirim hasil akhir sesuai format yang diminta
        res.status(200).json({
            status: true,
            creator: 'Firman Evergarden ^_^',
            data: resultData
        });

    } catch (error) {
        console.error(error); // Log error untuk debugging di server
        res.status(500).json({
            status: false,
            creator: 'Firman Evergarden ^_^',
            message: error.message || 'Terjadi kesalahan pada server'
        });
    }
});

// Jalankan server
app.listen(PORT, () => {
    console.log(`Server berjalan di http://localhost:${PORT}`);
});